@using FolderScanner.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ScanFolderModel

@{
    ViewData["Title"] = "Home Page";

    string RenderFileName(ModifiedFileModel modifiedFile)
    {
        return $"{GetModificationTypeString(modifiedFile)} {modifiedFile.FullName} {GetVersionIfNeeded(modifiedFile)}";
    }

    string GetModificationTypeString(ModifiedFileModel modifiedFile)
    {
        return modifiedFile.Type switch
        {
            ModifiedFileType.Added => "[A]",
            ModifiedFileType.Modified => "[M]",
            ModifiedFileType.Deleted => "[D]",
            _ => throw new ArgumentException("Unknown modified file type", nameof(modifiedFile.Type))
            };
    }

    string GetVersionIfNeeded(ModifiedFileModel modifiedFile)
    {
        return modifiedFile.Type == ModifiedFileType.Modified ? $"(in version {modifiedFile.Version})" : "";
    }
}

<h1>@ViewData["Title"]</h1>
<p>Folder Scanner is a simple application to detect changes in a local folder. </p>
<p>
    First time a new path is submitted, the app scans all files in a given folder including subdirectories.
    Each additional submit lists new, modified and deleted files in the directory.
</p>

<div class="content-wrapper">
    <form class="form">
        <div class="form-group">
            <label asp-for="Path" class="form-label"></label>
            <input asp-for="Path" class="form-control" value="@Model.Path"/>
            <input type="submit" value="Submit" class="btn btn-primary"/>
        </div>
    </form>


    @if (Model.ModifiedFiles.Any())
    {
        <ul>
            @foreach (var modifiedFile in Model.ModifiedFiles)
            {
                <li>@RenderFileName(modifiedFile)</li>
            }
        </ul>
    }
    else if (Model.Messages.Length > 0)
    {
        @foreach (var message in Model.Messages)
        {
            <p>@message</p>
        }
    }
    else
    {
        <p>No changes</p>
    }
</div>

<style>
    .content-wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .form {
        width: 500px;
        margin: 25px 0;
    }

    .form-group {
        display: flex;
        align-items: baseline;
    }

    .form-control { margin: 5px 10px; }

    .output-wrapper { width: 500px; }
</style>